# Content Processing Configuration
# Defines how different content types are processed and what special files are recognized

content_types:
  # Define what content types the system can process
  supported_types:
    - blog
    - project
    - idea
    - episode
    - moment
    - resume
    - recent_update

  # Content type specific processing rules
  processing_rules:
    blog:
      primary_file_patterns: ["*.md", "index.md", "README.md"]
      metadata_sources: ["frontmatter", ".silan-cache"]
      required_fields: ["title", "slug"]
      optional_fields: ["description", "tags", "category", "author", "date"]

    project:
      primary_file_patterns: ["README.md", "*.md"]
      metadata_sources: ["frontmatter", ".silan-cache"]
      required_fields: ["title", "slug", "description"]
      optional_fields: ["github_url", "demo_url", "technologies", "status"]

    idea:
      primary_file_patterns: ["*.md", "index.md"]
      metadata_sources: ["frontmatter", ".silan-cache"]
      required_fields: ["title", "slug"]
      optional_fields: ["description", "status", "priority", "tags"]
      special_files_enabled: true

    episode:
      primary_file_patterns: ["*.md"]
      metadata_sources: [".silan-cache"]
      required_fields: ["title", "episode_number"]
      optional_fields: ["description", "duration", "status"]

# Special File Processing Configuration
special_files:
  # Default configuration for all special files
  defaults:
    encoding: "utf-8"
    required: false
    parse_frontmatter: true

  # Configuration for each special file type
  files:
    "REFERENCES.md":
      processor: "references"
      metadata_key: "references_data"
      content_key: "references_content"
      file_key: "references_file"
      description: "External references and citations"

    "TIMELINE.md":
      processor: "timeline"
      metadata_key: "timeline_data"
      content_key: "timeline_content"
      file_key: "timeline_file"
      description: "Project timeline and milestones"

    "NOTES.md":
      processor: "notes"
      metadata_key: "notes_data"
      content_key: "notes_content"
      file_key: "notes_file"
      description: "Development notes and observations"

    "TODO.md":
      processor: "todo"
      metadata_key: "todo_data"
      content_key: "todo_content"
      file_key: "todo_file"
      description: "Todo items and task lists"

    "CHANGELOG.md":
      processor: "changelog"
      metadata_key: "changelog_data"
      content_key: "changelog_content"
      file_key: "changelog_file"
      description: "Version history and changes"

# Parser-specific configurations
parsers:
  base_parser:
    markdown_extensions: [".md", ".markdown"]
    encoding: "utf-8"
    cache_filename: ".silan-cache"

  idea_parser:
    # Inherit from base parser, add specific configurations
    special_file_processing:
      enabled: true
      post_processors:
        references: "idea_references"  # Custom post-processing for references
        timeline: null
        notes: null
        todo: null
        changelog: null

  episode_parser:
    special_file_processing:
      enabled: false

  blog_parser:
    special_file_processing:
      enabled: false

# Content extraction rules
extraction:
  frontmatter:
    parsers: ["yaml", "toml", "json"]
    delimiters:
      yaml: ["---", "---"]
      toml: ["+++", "+++"]
      json: ["{", "}"]

  content_sections:
    # Define how to split content into sections
    section_markers:
      - "## "
      - "### "
      - "#### "

  metadata_mapping:
    # Map common metadata fields to standardized names
    title: ["title", "name", "heading"]
    description: ["description", "summary", "excerpt"]
    tags: ["tags", "keywords", "labels"]
    author: ["author", "by", "creator"]
    date: ["date", "created", "published"]

# Language and localization
localization:
  default_language: "en"
  supported_languages: ["en", "zh", "es", "fr", "de"]
  language_detection:
    from_filename: true  # detect from filename like "post.zh.md"
    from_frontmatter: true  # detect from "lang" or "language" field
    fallback_to_default: true